# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_deploy:

    runs-on: ubuntu-latest

    steps:
    - name: checkout project
      uses: actions/checkout@v2
    
    - name: set up python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    
    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        if [ -f application/requirements.txt ]; then pip install -r application/requirements.txt; fi
    
    - name: lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: check unit tests and coverage
      run: |
        export PYTHONPATH=application
        pip install pytest
        pip install pytest-cov
        pytest --cache-clear --cov-fail-under=90 --cov=application tests/

    - name: docker hub login
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: set up docker buildx
      uses: docker/setup-buildx-action@v1

    - name: docker hub build and push (latest)
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/timezone-api:latest

    - name: deploy to heroku
      env:
          HEROKU_APP_NAME: ${{ 'timezone-api-01' }}
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
        heroku container:push web -a $HEROKU_APP_NAME
        heroku container:release web -a $HEROKU_APP_NAME